buildscript {
	repositories {
        mavenLocal()
        maven {
            url "https://maven.aliyun.com/nexus/content/groups/public/"
            allowInsecureProtocol = true
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:3.2.1")
    }
}

subprojects{
    apply plugin: "java"
    apply plugin: "maven-publish"
    apply plugin: "java-library"
//    if(!name.equals("demo-api")&&!name.equals("demo-framework")) {
//	    apply plugin: "org.springframework.boot"
//    }
    apply plugin: "io.spring.dependency-management"
    apply from: "${rootProject.projectDir}/dependencies.gradle"
    group = "com.cosy.sun"
    version = "${demoVersion}"
    sourceSets {
        main{
            java{
                srcDir 'src/main/java'
            }
            resources{
                srcDir 'src/main/resources'
            }
        }
    }
    test {
        enabled(false)
    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
//            mavenBom "org.springframework."
        }
    }
    dependencies {
        testImplementation "org.springframework.boot:spring-boot-starter-test"
        implementation "org.projectlombok:lombok:1.18.30"
        testImplementation "junit:junit"
        testImplementation 'org.springframework.batch:spring-batch-test'
        annotationProcessor "org.projectlombok:lombok:1.18.30"
    }
    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId project.group
                artifactId project.name
                version project.version
                from components.java

            }
        }
        repositories {
            maven {
                url = "file:D://java//repojar"
            }
        }
    }
    repositories {
        mavenLocal()
        maven {
            url "https://maven.aliyun.com/nexus/content/groups/public/"
        }
    }
    tasks.withType(JavaCompile) {
        options.encoding = "${encoding}"
//        options.compilerArgs += "${vmArgs}"
    }
//    tasks.withType(Test) {
//        jvmArgs += "${vmArgs}"
//    }
//    tasks.withType(JavaExec) {
//        jvmArgs += "${vmArgs}"
//    }
    tasks.withType(Copy).all { duplicatesStrategy 'exclude' }
}